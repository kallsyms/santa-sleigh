name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.22'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build linux binary
        run: make build-linux VERSION=${GITHUB_REF_NAME#v}
      - name: Build .deb package
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          packaging/linux/build_deb.sh "$VERSION" amd64 dist/linux/santa-sleigh
      - name: Upload linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: |
            dist/linux/*
          if-no-files-found: error

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build macOS binaries
        run: |
          make build-macos VERSION=${GITHUB_REF_NAME#v}
          mkdir -p dist/darwin/universal
          lipo -create -output dist/darwin/universal/santa-sleigh dist/darwin/santa-sleigh dist/darwin/santa-sleigh-amd64
      - name: Build .pkg installer
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          packaging/macos/build_pkg.sh "$VERSION" dist/darwin/universal/santa-sleigh
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            dist/darwin/*
            dist/macos/*.pkg
          if-no-files-found: error

  publish:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Prepare release files
        run: |
          set -euo pipefail
          shopt -s nullglob

          VERSION=${GITHUB_REF_NAME#v}
          mkdir -p release

          # Linux artifacts
          if [[ -d dist/linux-artifacts/dist/linux ]]; then
            if [[ -f dist/linux-artifacts/dist/linux/santa-sleigh ]]; then
              mv dist/linux-artifacts/dist/linux/santa-sleigh release/santa-sleigh-linux-amd64
            fi
            for path in dist/linux-artifacts/dist/linux/*; do
              base="$(basename "$path")"
              [[ "$base" == "santa-sleigh" ]] && continue
              mv "$path" "release/$base"
            done
          fi

          # macOS artifacts
          if [[ -d dist/macos-artifacts/dist/darwin ]]; then
            if [[ -f dist/macos-artifacts/dist/darwin/santa-sleigh ]]; then
              mv dist/macos-artifacts/dist/darwin/santa-sleigh release/santa-sleigh-darwin-arm64
            fi
            if [[ -f dist/macos-artifacts/dist/darwin/santa-sleigh-amd64 ]]; then
              mv dist/macos-artifacts/dist/darwin/santa-sleigh-amd64 release/santa-sleigh-darwin-amd64
            fi
            if [[ -f dist/macos-artifacts/dist/darwin/universal/santa-sleigh ]]; then
              mv dist/macos-artifacts/dist/darwin/universal/santa-sleigh release/santa-sleigh-darwin-universal
            fi
            for path in dist/macos-artifacts/dist/darwin/*; do
              base="$(basename "$path")"
              case "$base" in
                santa-sleigh|santa-sleigh-amd64|universal)
                  continue
                  ;;
              esac
              if [[ -f "$path" ]]; then
                mv "$path" "release/$base"
              fi
            done
            if [[ -d dist/macos-artifacts/dist/darwin/universal ]]; then
              for path in dist/macos-artifacts/dist/darwin/universal/*; do
                base="$(basename "$path")"
                [[ "$base" == "santa-sleigh" ]] && continue
                if [[ -f "$path" ]]; then
                  mv "$path" "release/$base"
                fi
              done
            fi
          fi

          if [[ -d dist/macos-artifacts/dist/macos ]]; then
            for pkg in dist/macos-artifacts/dist/macos/*.pkg; do
              mv "$pkg" "release/$(basename "$pkg")"
            done
          fi
      - name: Update Homebrew formula
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          ./packaging/homebrew/update_formula.sh "$VERSION"
      - name: Commit Homebrew formula update
        run: |
          VERSION=${GITHUB_REF_NAME}
          if ! git diff --quiet Formula/santa-sleigh.rb; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add Formula/santa-sleigh.rb
            git commit -m "Update Homebrew formula for ${VERSION}"
            git push origin HEAD:main
          fi
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release/**
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
