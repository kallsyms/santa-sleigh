name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.22'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build linux binary
        run: make build-linux VERSION=${GITHUB_REF_NAME#v}
      - name: Build .deb package
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          packaging/linux/build_deb.sh "$VERSION" amd64 dist/linux/santa-sleigh
      - name: Upload linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: |
            dist/linux/*
        if-no-files-found: error

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build macOS binaries
        run: |
          make build-macos VERSION=${GITHUB_REF_NAME#v}
          mkdir -p dist/darwin/universal
          lipo -create -output dist/darwin/universal/santa-sleigh dist/darwin/santa-sleigh dist/darwin/santa-sleigh-amd64
      - name: Build .pkg installer
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          packaging/macos/build_pkg.sh "$VERSION" dist/darwin/universal/santa-sleigh
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            dist/darwin/*
            dist/macos/*.pkg
        if-no-files-found: error

  publish:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Prepare release files
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          mkdir -p release
          mv dist/linux-artifacts/* release/
          mv dist/macos-artifacts/* release/
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release/**
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
